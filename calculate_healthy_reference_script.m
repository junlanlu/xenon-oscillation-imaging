%% load filelists
Filelists.filelist_healthyyoung_keyhole;
filelist_all = all_healthyyoung_keyhole;
%% Calculate healthy reference histogram

running_hist = []
for subj = 1:size(filelist_all, 1)
    pathbundle.theDixonFile = filelist_all{subj, 2};
    pathbundle.theMaskFile = filelist_all{subj, 3};
    pathbundle.theSpectFile = filelist_all{subj, 4};
    pathbundle.theSubject = filelist_all{subj, 1};

    % decompose file path
    [pathbundle.filepath,pathbundle.filename] = fileparts(pathbundle.theMaskFile);
    mat_file = dir(fullfile(pathbundle.filepath, '*_osc.mat'));
    load(fullfile(mat_file.folder, mat_file.name));
    running_hist = [running_hist; RBC_Osc(RBC_Osc~=0)];
end

scale_factor = 100;
[transdat,lambda] = boxcox(running_hist+scale_factor);
mean_transdat = mean(transdat);
std_transdat = std(transdat);
threshold_boxcox = [Tools.inverseboxcox(lambda, mean_transdat-2*std_transdat, scale_factor) ...
    Tools.inverseboxcox(lambda, mean_transdat-1*std_transdat, scale_factor)...
    Tools.inverseboxcox(lambda, mean_transdat, scale_factor)...
    Tools.inverseboxcox(lambda, mean_transdat+1*std_transdat, scale_factor)...
    Tools.inverseboxcox(lambda, mean_transdat+2*std_transdat, scale_factor)...
    Tools.inverseboxcox(lambda, mean_transdat+3*std_transdat, scale_factor)...
    Tools.inverseboxcox(lambda, mean_transdat+4*std_transdat, scale_factor)...
    ]

threshold_normal = [mean(running_hist)-2*std(running_hist)...
                    mean(running_hist)-1*std(running_hist)...
                    mean(running_hist)...
                    mean(running_hist)+1*std(running_hist)...
                    mean(running_hist)+2*std(running_hist)...
                    mean(running_hist)+3*std(running_hist)...
                    mean(running_hist)+4*std(running_hist)...
                    ]
mean_old = 9.8104;
std_old = 9.01;
threshold_old = [mean_old-2*std_old...
                    mean_old-1*std_old...
                    mean_old...
                    mean_old+1*std_old...
                    mean_old+2*std_old...
                    mean_old+3*std_old... 
                    mean_old+4*std_old...
                    ]

histogram(running_hist, 50);
xlabel('oscillation percentage');
ylabel('count');
pbaspect([1 1 1]);