function b = lowpassfilter(lengthdata)
%TEMP Returns a discrete-time filter object. With order N.

% MATLAB Code
% Generated by MATLAB(R) 9.2 and the Signal Processing Toolbox 7.4.
% Generated on: 19-Jul-2017 11:45:18

% FIR Window Highpass filter designed using the FIR1 function.

% All frequency values are in Hz.
Fs = 50;  % Sampling Frequency

N     = 2*floor(lengthdata/2/3)-2;      % Order
Fc    = 0.5;      % Cutoff Frequency
flag  = 'scale';  % Sampling Flag
Alpha = 2.5;      % Window Parameter

% Create the window vector for the design algorithm.
win = gausswin(N+1, Alpha);

% Calculate the coefficients using the FIR1 function.
b  = fir1(N, Fc/(Fs/2), 'high', win, flag);
Hd = dfilt.dffir(b);

% [EOF]

%UNTITLED Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 9.5 and Signal Processing Toolbox 8.1.
% Generated on: 05-Jun-2019 16:11:27

% FIR Window Highpass filter designed using the FIR1 function.

% All frequency values are in Hz.
% Fs = 50;  % Sampling Frequency
% 
% Fstop = 0.4;             % Stopband Frequency
% Fpass = 0.8;             % Passband Frequency
% Dstop = 0.035481338923;  % Stopband Attenuation
% Dpass = 0.057501127785;  % Passband Ripple
% flag  = 'scale';         % Sampling Flag
% 
% % Calculate the order from the parameters using KAISERORD.
% [N,Wn,BETA,TYPE] = kaiserord([Fstop Fpass]/(Fs/2), [0 1], [Dpass Dstop]);
% 
% % Calculate the coefficients using the FIR1 function.
% b  = fir1(N, Wn, TYPE, kaiser(N+1, BETA), flag);
% Hd = dfilt.dffir(b);

% [EOF]

